
// STRIP UNIT
// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// CONVERT TO REM
@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

// OLD EM CALC
// Deprecated: We'll drop support for this in 5.1.0, use rem-calc()
@function emCalc($values){
  @return rem-calc($values);
}

@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range,1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}


$rem-base: 16px !default;
$default-float: left !default;
// We use these to control text direction settings
$text-direction: ltr !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

$column-gutter: rem-calc(40) !default;

// Media Query Ranges
//$small-range: (0em, 40em) !default;
$small-range: (0em , 480px ) !default;
//$medium-range: (40.063em, 64em) !default;
$medium-range: ( 481px, 768px ) !default;
$large-range: ( 992px, 1180 ) !default;
$xlarge-range: ( 1200px, 1480px ) !default;
//$xxlarge-range: ( 481px, 768px ) !default;
//$large-range: (64.063em, 90em) !default;
//$xlarge-range: (90.063em, 120em) !default;
$xxlarge-range: (120.063em, 99999999em) !default;



$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})" !default;

$medium-up: "#{$screen} and (min-width:#{upper-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})" !default;

// Legacy
$small: $medium-up;
$medium: $medium-up;
$large: $large-up;

// IMPORT ONCE
// We use this to prevent styles from being loaded multiple times for compenents that rely on other components. 
$modules: () !default;
@mixin exports($name) {
  @if (index($modules, $name) == false) {
    $modules: append($modules, $name);
    @content;
  }
}

// We use this to do clear floats
@mixin clearfix {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}

//
// Block Grid Variables
//
$include-html-classes: true !default;
$include-html-grid-classes: $include-html-classes !default;
$include-xl-html-block-grid-classes: false !default;

// We use this to control the maximum number of block grid elements per row
$block-grid-elements: 12 !default;
$block-grid-default-spacing: rem-calc(40) !default;

$align-block-grid-to-grid: true !default;
@if $align-block-grid-to-grid {
  $block-grid-default-spacing: rem-calc(40);
}


// Enables media queries for block-grid classes. Set to false if writing semantic HTML.
$block-grid-media-queries: true !default;

//
// Block Grid Mixins
//

// Create a custom block grid
//
// $per-row - # of items to display per row. Default: false.
// $spacing - # of ems to use as padding on each block item. Default: rem-calc(20).
// $base-style - Apply a base style to block grid. Default: true.
@mixin block-grid(
  $per-row:false,
  $spacing:$block-grid-default-spacing,
  $include-spacing:true,
  $base-style:true) {

  @if $base-style {
    display: block;
    @if $align-block-grid-to-grid {
      margin: 0;
      padding: 0 ($spacing/2);
    } @else {
      margin: 0 (-$spacing/2);
    }
    @include clearfix;

    &>li {
      display: block;
      height: auto;
      float: $default-float;
      @if $include-spacing {
        padding: 0 ($spacing/2) ( $spacing/2 );
      }
    }
  }

  @if $per-row {
    &>li {
      width: 100%/$per-row;
      @if $include-spacing {
        padding: 0 ($spacing/2) ( $spacing/2 );
      }
      list-style: none;

      &:nth-of-type(n) { clear: none; }
      &:nth-of-type(#{$per-row}n+1) { clear: both; }
      @if $align-block-grid-to-grid {
        @include block-grid-aligned($per-row, $spacing);
      }
    }
  }
}

@mixin block-grid-aligned($per-row, $spacing) {
  @for $i from 1 through $block-grid-elements {
    @if $per-row >= $i {
      $grid-column: '+' + $i;
      @if $per-row == $i {
        $grid-column: '';
      }
      &:nth-of-type(#{$per-row}n#{unquote($grid-column)}) {
        padding-left: ($spacing - (($spacing / $per-row) * ($per-row - ($i - 1))));
        padding-right: ($spacing - (($spacing / $per-row) * $i));
      }
    }
  }
}

// Generate presentational markup for block grid.
//
// $size - Name of class to use, i.e. "large" will generate .large-block-grid-1, .large-block-grid-2, etc.
@mixin block-grid-html-classes($size,$include-spacing) {
  @for $i from 1 through $block-grid-elements {
    .bon-mega-menu-items {
      .#{$size}-menu-col-#{($i)} {
        > ul {
          @include block-grid($i,$block-grid-default-spacing,$include-spacing,false);
        }
      }
    }
  }
}

@include exports("menu-grid") {
  @if $include-html-grid-classes {

    .bon-mega-menu-items [class*="menu-col-"] > ul { @include block-grid; }

    @if $block-grid-media-queries {
      @media #{$small-up} {
        @include block-grid-html-classes($size:sm,$include-spacing:false);
      }

      @media #{$medium-up} {
        @include block-grid-html-classes($size:md,$include-spacing:false);
      }

      @media #{$large-up} {
        @include block-grid-html-classes($size:lg,$include-spacing:false);
      }

      @if $include-xl-html-block-grid-classes {
        @media #{$xlarge-up} {
          @include block-grid-html-classes($size:xlg,$include-spacing:false);
        }

        @media #{$xxlarge-up} {
          @include block-grid-html-classes($size:xxlg,$include-spacing:false);
        }
      }
    }
  }
}


.clearfix {
  @include clearfix;
}
.bon-mega-menu-container {
  width: 100%;
}
@media only screen {
  .bon-mega-menu-items {
    list-style: none;
    margin: 0;
    padding: 0;
    font-size: 10px;
    position: relative;
    width: 100%;
    
    .img-block {
      display: block;
    }
    .menu-item {
      position: relative;
      > .bon-menu-label {
        display: block;
        padding: 0 0 0 1.666666666666667em;
        line-height: 40px;
        margin-right: 50px;
        .bon-menu-text {
          color: inherit;
        }
      }
      .menu-toggle {
        position: absolute;
        right: 0;
        top: 0;
        width: 50px;
        height: 40px;
        line-height: 40px;
        font-size: 2.4em;
        text-align: center;
      }
      &.menu-has-children {
        cursor: pointer;
      }
      .bon-menu-desc {
        display: none;
      }
      .bon-menu-text-wrap {
        display: inline-block;
        vertical-align: middle;
      }
      .bon-menu-icon  {
        vertical-align: middle;
        &.bi-1x, &.bi-tiny, &.bi-sml {
          margin-top: .1em;
        }
        &.bi-1x, &.bi-tiny, &.bi-sml, &.bi-2x, &.bi-3x {
           + .bon-menu-text-wrap{
             vertical-align: top;
           }
        }
      }
    }
    .sub-menu {
      margin: 0;
      list-style: none;
      display: none;
      line-height: 2.4em;
      .bon-menu-text {
          vertical-align: middle;
      }
      
      .menu-item {
        position: relative;
        white-space: nowrap;
        float: none;
       
        .bon-menu-icon {
          &.bi-1x, &.bi-sml, &.bi-tiny {
            line-height: inherit;
          }
        }
        > .bon-menu-label {
          font-size: 1.3em;
          padding: 0 0 0 1.923076923076923em;
         
        }
       
      }
    }
    .menu-item-depth-0 {
      > .bon-menu-label {
          font-size: 1.5em;
      }
    }

    .bon-mega-menu-item {
      .sub-menu {
        display: block;
        line-height: 1.6;
        min-width: 0;
        .menu-item {
          border: 0;
          white-space: normal;
          > .bon-menu-label { 
            line-height: inherit;
          }
          &.menu-item-depth-1 {
            padding: 2em 0;
          }
          > .bon-menu-label {
            padding-left: 0;
            margin-right: 0;
          }
        }
        .menu-toggle {
          display: none;
        }
        &.sub-menu-1 {
          display: none;
          padding: 0 2em;

          > .menu-has-children, > .bon-menu-has-content {
            > .bon-menu-label {
              padding-bottom: .7em;
              border-bottom-width: 1px;
              border-bottom-style: solid;
              .bon-menu-text {
                font-weight: bold;
              }
            }
            > .sub-menu-2 {
              border-top-width: 1px;
              border-top-style: solid;
            }
          }

          > .bon-menu-has-content {
            > .sub-menu-2 {
              border-top: 0;
            }
          }

          > .bon-menu-has-widget {
            width: 100%;
          }
          
          .sub-menu {
            position: static;
            padding-left: 0;
            padding-right: 0;
            padding-top: .5em;
            box-shadow: none;
            .bon-menu-label {
              padding: .1em 0;
            }
            .sub-menu {
              padding-top: 0;
              padding-bottom: 0;
            }
            padding-bottom: 0;
          }
        }
      }
     
      &.bon-menu-full {
        .sub-menu.sub-menu-1 {
          width: 100%;
        }
      }
    }
  }
  .bon-menu-label {
    &.align-center {
      text-align: center;
    }
    &.align-left {
      text-align: left;
    }
    &.align-right {
      text-align: right;
    }
  }
  .bon-menu-content-container {
    font-size: 10px;
    padding: 1em 0 0;
    color: inherit;
    width: 100%;
    h1,h2,h3,h4,h5,h6 {
      color: inherit;
    }
    &.content-depth-1 {
      border-top-width: 1px;
      border-top-style: solid;
    }
    .bon-menu-content {
      font-size: 1.3em;
      color: inherit;
    }
  }
  .bon-menu-noicon.bon-menu-notext{
    .bon-menu-content-container.content-depth-1 {
      border-top: 0;
    }
  }
  .sub-menu-2, .sub-menu-3, .sub-menu-4 {
    .bon-menu-widget-container {
      .bon-menu-widget:last-child {
        margin-bottom: 0;
      }
    }
  }

  .bon-menu-widget-container {
    padding-left: 0 !important;
    padding-right: 0 !important;
    list-style: none;
    margin-left: 0;
  }

  .bon-menu-post {
    .bon-menu-post-excerpt {
      margin-bottom: 2em;
    }
  }
  .entry-post-meta strong {
    color: inherit;
  }
}

@media #{$medium-up} {
  .bon-mega-menu-items {
    .menu-item {
      float: left;
      > .bon-menu-label {
        padding: 0 1.041666666666667em;
        line-height: 2.083333333333333em;
        margin-right: 0;
      }
      .menu-toggle {
        display: none;
      }
      .bon-menu-desc {
        display: block;
        font-size: 0.8461538461538462em;
        margin-bottom: .3em;
      }
    }
    .sub-menu {
      padding: 1em 2em;
      position: absolute;
      min-width: 160px;
      box-shadow: 0px 2px 1px rgba(0,0,0,0.2);
      -moz-box-shadow: 0px 2px 1px rgba(0,0,0,0.2);
      -webkit-box-shadow: 0px 2px 1px rgba(0,0,0,0.2);
      -o-box-shadow: 0px 2px 1px rgba(0,0,0,0.2);
      -ms-box-shadow: 0px 2px 1px rgba(0,0,0,0.2);
      &.sub-menu-1 {
        top: 100%;
      }
      .menu-item {
        border-style: solid;
        border-width: 1px 0;
        &:first-child {
          border-top: 0;
        }
        &:last-child {
          border-bottom: 0;
        }
        .bon-menu-icon {
          &.bi-1x, &.bi-sml, &.bi-tiny {
            line-height: inherit;
          }
        }
        > .bon-menu-label {
          padding: 0;
        }
        .sub-menu {
          top: 0;
          left: 100%;
          z-index: 999;
        }
      }
    }
    .menu-item-depth-0 {
      > .bon-menu-label {
          font-size: 2.4em;
      }
    }
    .bon-mega-menu-item {
      position: static;
      .sub-menu {
        .menu-item {
          &.menu-item-depth-1 {
            padding: 2em 3em;
          }
        }
        &.sub-menu-1 {
          top: 100%;
          padding-left: 0;
          padding-right: 0;
          left: 0;
         
          > .menu-item {
            min-width: 140px !important;
            display: inline-block;
            float: left;
            position: relative;
            &.bon-menu-newrow {
              clear: both;
            }
            &.bon-menu-has-widget {
              width: 100%;
            }
          }
        }
      }
     
      &.bon-menu-full {
        .sub-menu.sub-menu-1 {
          width: 100%;
        }
      }
    }
  }

  .bon-menu-post {
    .bon-menu-post-excerpt {
      margin-bottom: 0;
    }
  }
}

.bon-menu-widget-title {
  font-size: 1.8em;
}
.bon-menu-widget-item {
  font-size: 1.3em;
  ul, li, ul li a {
    color: inherit;
  }
}
.bon-menu-divider {
  width: 100%;
  display: block;
  height: 0;
  border-style: solid;
  border-width: 1px 0;
  margin: 1em 0;
}

.bon-menu-widget {
  margin-bottom: 0;
}

.bon-mega-menu-item {
  input[type="text"],
  input[type="email"],
  input[type="number"],
  input[type="url"],
  input[type="password"],
  textarea,
  select {
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-radius: 3px;
    max-width: 100%;
  }
  textarea {
    height: auto;
  }
}


/* Theming the Menu */

.bon-menu-post-title {
  font-size: 1.4em;
  font-weight: bold;
  a {
    color: inherit;
  }
}
.item-title {
  color: inherit;
  a {
    color: inherit
  }
}


.bon-menu-dark {
  hr {
    border-color: #444;
  }
  .menu-item .menu-toggle {
      color: #fff;
  }
  .sub-menu .menu-item {
      border-color: #444 transparent #222;
  }
  .bon-mega-menu-item {
    input[type="text"],
    input[type="email"],
    input[type="number"],
    input[type="url"],
    input[type="password"],
    textarea,
    select {
      background-color: #444;
      border-color: #444;
      color: #fff;
      &:focus {
        background-color: #3a3a3a;
        border-color: #4a4a4a;
      }
    }
    .sub-menu {
      &.sub-menu-1 {
        > .menu-has-children, > .bon-menu-has-content {
          > .bon-menu-label {
            border-bottom-color: #222;
          }
          > .sub-menu-2 {
            border-top-color: #444;
          }
        }
      }
    }
  }
  .bon-menu-content-container.content-depth-1 {
      border-top-color: #444;
  }
  .bon-menu-divider {
    border-color: #222 transparent #444;
  }
}



@media #{$small-up} {
  .bon-menu-dark {
    .current-menu-item {
      background-color: #202020;
    }
  }
  .bon-menu-light {
    .current-menu-item {
      background-color: #d3d3d3;
    }
  }
}

@media #{$medium-up} {
  .bon-menu-dark, .bon-menu-light {
    .current-menu-item {
      background-color: transparent; // let the theme decide
    }
  }
}

.bon-menu-light {
  hr {
    border-color: #ddd;
  }
  .menu-item .menu-toggle {
    color: #222;
  }
  .sub-menu .menu-item {
      border-color: #fff transparent #d3d3d3;
  }
  .bon-mega-menu-item {
    input[type="text"],
    input[type="email"],
    input[type="number"],
    input[type="url"],
    input[type="password"],
    textarea,
    select {
      background-color: #fff;
      border-color: #eee;
      color: #222;
      &:focus {
        background-color: #e3e3e3;
      }
    }
    .sub-menu {
      &.sub-menu-1 {
        > .menu-has-children, > .bon-menu-has-content {
          > .bon-menu-label {
            border-bottom-color: #d3d3d3;
          }
          > .sub-menu-2 {
            border-top-color: #fff;
          }
        }
      }
    }
  }
  .bon-menu-content-container.content-depth-1 {
      border-top-color: #fff;
  }
  .bon-menu-divider {
    border-color: #d3d3d3 transparent #fff;
  }

}


$amethyst: #9b59b6;
$blue: #00b4ff;
$brown: #976f46;
$concrete:#95a5a6;
$congo: #ff7878;
$emerald:#2ecc71;
$green:#73ba5d;
$navy:#00c3d2;
$orange:#f47e00;
$pink:#ea4c89;
$pomegranate:#c0392b;
$red:#fa565a;
$river:#6cbdc4;
$sunflower:#f1c40f;
$turquoise:#00cd99;
$weed:#fa565a;